package package8;import com.sun.tools.internal.ws.api.TJavaGeneratorExtension;import java.util.Random;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.Semaphore;/** *  */public class SemaphoreTest {    private static final int       THREAD_COUNT = 30;    private static ExecutorService threadPool   = Executors.newFixedThreadPool(THREAD_COUNT);    private static Semaphore       s            = new Semaphore(10);    public static void main(String[] args) {        for (int i = 0; i < THREAD_COUNT; i++) {            threadPool.execute(new Runnable() {                @Override                public void run() {                    try {                        s.acquire();                        System.out.println("我正在干活啦！"+ Thread.currentThread().getName());                        Thread.sleep(new Random().nextInt(1000));                        s.release();                    } catch (InterruptedException e) {                    }                }            });        }        threadPool.shutdown();    }}